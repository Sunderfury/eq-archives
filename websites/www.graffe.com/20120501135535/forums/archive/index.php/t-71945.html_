<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
	<meta name="keywords" content="jmeter, test, pass, header, oauth, site, back, stuck, server, header/body, parameters, correctly, authenticate, errors, hack, parameter, finally, response, good, request, http, authorization, information, turns, edit, weeeeee, normal, written, running, started, responses, stress, harnesses, testing, issue, curl, groking, software, older, version, works, plugin, engineer, authentication, argh, passing" />
	<meta name="description" content="Okay, so I got hired as a QA intern recently, which has worked out mostly fine; I like bug hunting and I know just enough software stuff to track down what's wrong. However, I'm NOT a programmer, and haven't had time to pick up an actual language yet. 
 
Well, Boss #2 wants me to set up a load test for our servers before we push this next big project; not only does he want to whack the servers with a few thousand queries, but he wants me to make sure that all the queries get back the right" />
	
	<title> Help! PHP, Test Harnesses, and Stress Testing [Archive]  - Graffë Forums</title>
	<link rel="stylesheet" type="text/css" href="http://www.graffe.com/forums/archive/archive.css" />
</head>
<body>
<div class="pagebody">
<div id="navbar"><a href="http://www.graffe.com/forums/archive/index.php?s=970a492923baf9ec048663183c1a3d18">Graffë Forums</a> &gt; <a href="http://www.graffe.com/forums/archive/index.php/f-111.html?s=970a492923baf9ec048663183c1a3d18">General Discussion Forums</a> &gt; <a href="http://www.graffe.com/forums/archive/index.php/f-102.html?s=970a492923baf9ec048663183c1a3d18">Technical Support Forum</a> &gt;  Help! PHP, Test Harnesses, and Stress Testing</div>
<hr />
<div class="pda"><a href="http://www.graffe.com/forums/archive/index.php/t-71945.html?s=970a492923baf9ec048663183c1a3d18&amp;pda=1" rel="nofollow">PDA</a></div>
<p class="largefont">View Full Version : <a href="http://www.graffe.com/forums/showthread.php?71945-Help!-PHP-Test-Harnesses-and-Stress-Testing&amp;s=970a492923baf9ec048663183c1a3d18">Help! PHP, Test Harnesses, and Stress Testing</a></p>
<hr />
<div class="floatcontainer"><!-- BEGIN TEMPLATE: ad_archive_above_content1 -->
 
<!-- END TEMPLATE: ad_archive_above_content1 --><!-- BEGIN TEMPLATE: ad_archive_above_content2 -->
 
<!-- END TEMPLATE: ad_archive_above_content2 --></div><br />
<div class="post"><div class="posttop"><div class="username">Atelen</div><div class="date">August 28th, 2011, 01:49 PM</div></div><div class="posttext">Okay, so I got hired as a QA intern recently, which has worked out mostly fine; I like bug hunting and I know just enough software stuff to track down what's wrong. However, I'm NOT a programmer, and haven't had time to pick up an actual language yet.<br />
<br />
Well, Boss #2 wants me to set up a load test for our servers before we push this next big project; not only does he want to whack the servers with a few thousand queries, but he wants me to make sure that all the queries get back the right response. He suggested a write a simple PHP page as a test harness, set up so it responds in a certain way to queries...<br />
<br />
Help! I understand the big picture of what he wants, but I'm a bit over my head in terms of implementing it. I can only teach myself PHP so quickly.</div></div><hr />


<div class="post"><div class="posttop"><div class="username">HaftVishniak</div><div class="date">August 29th, 2011, 07:08 AM</div></div><div class="posttext">I think nodejs (http://nodejs.org) lends itself very well to this kind of requirement.<br />
<br />
This is a very simple nodejs program which will run up to a thousand concurrent queries against an echo service which simply returns the content of the &quot;flag&quot; parameter. It stops after ten thousand requests and asserts that the body returned is the flag sent.<br />
<br />
Where you'd have to flesh things out is in crafting the test queries and the assertions that they have returned the correct data.<br />
<br />
Node is good, also, in that it's just (&quot;just&quot;) JavaScript. It's &quot;node testclient.js&quot; to run. This simple program takes 3300 ms to make and test 10000 queries. Obviously a real test script will likely be slower.<br />
<br />
You also get all of the debugging tools that chrome provides via node-inspector; that means that you can breakpoint on failing tests and see what the actual contents of the requests are.<br />
<br />
<br />
var MAX_CONCURRENT, TOTAL, concurrent, count, fails, flag, flags, request, run, successes, test;<br />
request = require('request');<br />
TOTAL = 10000;<br />
MAX_CONCURRENT = 1000;<br />
flags = 'foo bar waz'.split(' ');<br />
count = concurrent = successes = fails = 0;<br />
test = function(flag) {<br />
  if (concurrent &lt; MAX_CONCURRENT) {<br />
    concurrent++;<br />
    return request(&quot;http://localhost:9001/?flag=&quot; + flag, function(error, response, body) {<br />
      concurrent--;<br />
      count++;<br />
      if (response.body === flag) {<br />
        successes++;<br />
      } else {<br />
        fails++;<br />
      }<br />
      if (count === TOTAL) {<br />
        return console.log(&quot;Test run complete. &quot; + successes + &quot; successes and &quot; + fails + &quot; failures.&quot;);<br />
      } else {<br />
        return console.log(&quot;Test run in progress ... &quot; + successes + &quot; successes and &quot; + fails + &quot; failures.&quot;);<br />
      }<br />
    });<br />
  } else {<br />
    return setTimeout(function() {<br />
      return test(flag);<br />
    }, 1);<br />
  }<br />
};<br />
for (run = 1; run &lt;= TOTAL; run++) {<br />
  flag = flags[Math.floor(Math.random() * flags.length)];<br />
  test(flag);<br />
}<br />
<br />
<br />
EDIT: fixed up the code generated by CoffeeScript</div></div><hr />


<div class="post"><div class="posttop"><div class="username">Merrick ap'Milandra</div><div class="date">August 29th, 2011, 08:49 AM</div></div><div class="posttext">I also ran across this (http://shiflett.org/blog/2006/feb/test-harness-for-php), which may help. test-more.php or test-harness.php may be what you're looking for. Which one you use will depend on the level of complexity you're after.</div></div><hr />


<div class="post"><div class="posttop"><div class="username">Atelen</div><div class="date">August 29th, 2011, 10:42 AM</div></div><div class="posttext">The trick being that I need to take things a step or two back from where both of you are, because using a computer and dealing with it at the code level are two very different things. Not a programmer!</div></div><hr />


<div class="post"><div class="posttop"><div class="username">HaftVishniak</div><div class="date">August 29th, 2011, 03:47 PM</div></div><div class="posttext">Right!<br />
<br />
So you're testing some kind of web service? It's something that you can view in a browser, right?<br />
<br />
The first thing to do is understand the communication between the client and the server. You can do that by using cURL (http://en.wikipedia.org/wiki/CURL). If you're stuck on windows I see that there's a few programs there which can do it.<br />
<br />
You'll want to do it by hand at least a few times to get a feel for what you're going to automate. Construct the requests and have a poke at the responses.<br />
<br />
What the code I pasted in does is throw a few thousand cURLs at a given URL at a time. All the program you're going to write is going to do is pick from one of the tests, throw that at the server, and then inspect the result -- while being able to match up the query sent with the expected result.<br />
<br />
All you should plan to accomplish for your first step is take a hand-crafted query and turn it into a program to send that one single query to the server. For bonus marks write an assertion that the query succeeded with a 200 OK (http://www.w3.org/Protocols/HTTP/HTRESP.html).<br />
<br />
Then take that to your local developer and get them to review it. A successful review is one where they find something to critique about the code you've written.<br />
<br />
Actually something to look at may be JMeter (http://en.wikipedia.org/wiki/JMeter). It has a UI and you can craft test scripts in it. Last I used it it was kind of clunky, but workable. You need to grok the curl, though.</div></div><hr />


<div class="post"><div class="posttop"><div class="username">Atelen</div><div class="date">August 30th, 2011, 02:41 PM</div></div><div class="posttext">Yes, groking the curl is the issue right now. I actually started in JMeter and got it up and running and getting back 200 OK responses off of a test site. Now I'm using it against a test site my software engineer set up... which is behind OAuth authentication.<br />
<br />
Argh.<br />
<br />
There's an OAuth plugin written for JMeter (and older version, but it still works), but it's not passing the header information to the server correctly. I'm stuck at 401 errors trying to authenticate in. Meanwhile, if I try to hack together the parameters in the header/body I need in a normal HTTP request, JMeter doesn't pass the Authorization header in the parameter.<br />
<br />
Weeeeee...<br />
<br />
Edit: Turns out JMeter does pass it, I just can't see it. Finally got back a 200 ok response and it seems we're good to go.</div></div><hr />


<div class="post"><div class="posttop"><div class="username">HaftVishniak</div><div class="date">August 30th, 2011, 10:51 PM</div></div><div class="posttext">One thing you might want to look at is ethereal (http://www.ethereal.com/) or similar program.<br />
<br />
It will let you examine all of the http traffic coming out of your machine, so that stuff that isn't captured by JMeter or the tool of your choice can be inspected.<br />
<br />
The friendliest UI one I have seen is Fiddler (http://www.fiddler2.com/fiddler2/). Windows only though, so useless to me at the moment.</div></div><hr />


<div class="post"><div class="posttop"><div class="username">Atelen</div><div class="date">August 30th, 2011, 11:24 PM</div></div><div class="posttext">Thanks! Once this little project is done, I can actually sit down and take the time to read through and learn all this, so I'll probably have more questions later!</div></div><hr />


<div class="post"><div class="posttop"><div class="username">Atelen</div><div class="date">August 31st, 2011, 10:34 AM</div></div><div class="posttext">Ran some quick JMeter tests this morning; we kept getting timeout errors all over. I think we stress tested my internet connection more then the actual server. JMeter can be confusing to configure at times.</div></div><hr />


<div class="post"><div class="posttop"><div class="username">Atelen</div><div class="date">September 1st, 2011, 09:35 AM</div></div><div class="posttext">If you happen to have any experience with JMeter, Haft, we're getting some issues pushing requests to the server we're testing:<br />
<br />
rc=&quot;Non HTTP response code: java.net.ConnectException&quot; rm=&quot;Non HTTP response message: Cannot assign requested address&quot;<br />
<br />
Pretty sure it's a networking issue of some sort.</div></div><hr />


<div class="post"><div class="posttop"><div class="username">HaftVishniak</div><div class="date">September 2nd, 2011, 03:48 AM</div></div><div class="posttext">Sorry, been on a boat all day :) I found this: http://jmeter.512774.n5.nabble.com/Does-this-error-eman-it-is-an-error-at-your-client-machine-side-or-the-error-at-the-server-side-td1223802.html<br />
<br />
How many threads are you trying with?</div></div><hr />

<!-- BEGIN TEMPLATE: ad_archive_below_content -->
 
<!-- END TEMPLATE: ad_archive_below_content -->
<div id="copyright">Powered by vBulletin&reg; Version 4.1.12 Copyright &copy; 2012 vBulletin Solutions, Inc. All rights reserved.</div>
</div>
</body>
</html>